{"version":3,"sources":["Login.js","ToDoApp.js","TodoItem.js","edit_icon.png","delete_icon.png","App.js","serviceWorker.js","index.js"],"names":["App","props","handleTopSignUpButton","event","preventDefault","setState","signUpTop","loginTop","createBtn","loginBtn","firstName","error","handleTopLoginButton","handleEmail","emailInput","target","value","handlePassword","passwordInput","handleFirstName","firstnameInput","handleLogin","axios","post","email","state","toLowerCase","password","then","response","global","loggedIn","sendData","sendEmail","handleGuest","handleSignUp","sendFirstName","id","text","date","time","username","parentCallback","parentCallback2","parentCallback3","className","this","onClick","handleTopSignUPButton","name","placeholder","onChange","type","React","Component","ToDoApp","handleAdd","textboxStatus","userInput","dateInput","timeInput","alert","handleSubmit","inputArray","clickCount","emailFromParent","console","log","res","componentDidMount","handleCancel","handleDate","handleTime","handleChange","callbackFunction","childData","data","backendData","updateCount","checker","todos","dataFromParent","output","get","length","sort","a","b","Date","i","push","firstNameFromParent","shift","todoItems","map","item","TodoItem","checkBoxStatus","styleText","reminder","editBoxStatus","handleBoxChange","bind","reminderLogic","handleDelete","handleEdit","handleUpdate","day3","curTime","year","getFullYear","month","getMonth","day","getDate","end","year2","month2","day2","future","futureMonth","futureYear","checked","upDatedList","put","_id","delete","src","edit","alt","delete_icon","module","exports","callbackFunction2","childEmail","callbackFunction3","childFirstName","Login","parentCallback4","callbackFunction4","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2a3a4597.chunk.js","sourcesContent":["import React from 'react';\nimport './Nice.css';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    global.email = '';\n    global.error = 0;\n    global.firstName = '';\n    this.state = {\n      createBtn: 'btnlogin',\n      loginBtn: 'noDisplay',\n      signUpTop: 'buttonTopActive',\n      loginTop: 'buttonTop',\n      firstName: '',\n      loggedIn: false,\n      emailInput: '',\n      passwordInput: '',\n      firstnameInput: '',\n      error: 0\n    };\n  }\n\n  handleTopSignUpButton = event => {\n    event.preventDefault();\n    this.setState({\n      signUpTop: 'buttonTopActive',\n      loginTop: 'buttonTop',\n      createBtn: 'btnlogin',\n      loginBtn: 'noDisplay',\n      firstName: '',\n      error: 0\n    });\n  };\n\n  handleTopLoginButton = event => {\n    event.preventDefault();\n    this.setState({\n      signUpTop: 'buttonTop',\n      loginTop: 'buttonTopActive',\n      createBtn: 'noDisplay',\n      loginBtn: 'btnlogin',\n      firstName: 'noDisplay',\n      error: 0\n    });\n  };\n\n  handleEmail = event => {\n    this.setState({ emailInput: event.target.value });\n  };\n\n  handlePassword = event => {\n    this.setState({ passwordInput: event.target.value });\n  };\n\n  handleFirstName = event => {\n    this.setState({ firstnameInput: event.target.value });\n  };\n\n  handleLogin = event => {\n    event.preventDefault();\n\n    axios\n      .post('https://still-everglades-82859.herokuapp.com/api/auth/login', {\n        email: this.state.emailInput.toLowerCase(),\n        password: this.state.passwordInput\n      })\n      .then(\n        response => {\n          global.email = this.state.emailInput.toLowerCase();\n          this.setState({ loggedIn: true, error: 0 });\n          this.sendData();\n          this.sendEmail();\n        },\n        error => this.setState({ loggedIn: false, error: 1 })\n      );\n  };\n\n  handleGuest = event => {\n    event.preventDefault();\n\n    axios\n      .post('https://still-everglades-82859.herokuapp.com/api/auth/login', {\n        email: 'guest',\n        password: 'guest'\n      })\n      .then(response => {\n        global.email = 'guest';\n\n        this.setState({ loggedIn: true });\n        this.sendData();\n        this.sendEmail();\n      });\n  };\n\n  handleSignUp = event => {\n    event.preventDefault();\n    this.state.passwordInput !== '' &&\n    this.state.firstnameInput !== '' &&\n    this.state.emailInput !== ''\n      ? axios\n          .post(\n            'https://still-everglades-82859.herokuapp.com/api/auth/signup',\n            {\n              email: this.state.emailInput.toLowerCase(),\n              password: this.state.passwordInput\n            }\n          )\n          .then(\n            response => {\n              global.email = this.state.emailInput.toLowerCase();\n              global.firstName = this.state.firstnameInput;\n              this.setState({ loggedIn: true, error: 0 });\n              this.sendData();\n              this.sendEmail();\n              this.sendFirstName();\n\n              axios.post(\n                'https://still-everglades-82859.herokuapp.com/api/stuff',\n                {\n                  id: '',\n                  text: 'A',\n                  date: '',\n                  time: '',\n                  email: global.email,\n                  username: global.firstName\n                }\n              );\n            },\n            error => this.setState({ loggedIn: false, error: 3 })\n          )\n      : this.setState({ error: 2 });\n  };\n\n  sendData = () => {\n    this.props.parentCallback(this.state.loggedIn);\n  };\n  sendEmail = () => {\n    this.props.parentCallback2(global.email);\n  };\n  sendFirstName = () => {\n    this.props.parentCallback3(global.firstName);\n  };\n\n  render() {\n    return (\n      <div className={this.state.loggedIn ? 'noDisplay' : 'fullBackground'}>\n        <form>\n          <button\n            className={this.state.signUpTop}\n            onClick={this.handleTopSignUPButton}>\n            Sign Up\n          </button>\n          <button\n            className={this.state.loginTop}\n            onClick={this.handleTopLoginButton}>\n            Log in\n          </button>\n\n          <p className='error'>\n            {this.state.error === 1 && !this.state.loggedIn\n              ? 'Incorrect email address or password'\n              : this.state.error === 2 && !this.state.loggedIn\n              ? 'Required field empty'\n              : this.state.error === 3 && !this.state.loggedIn\n              ? 'There is already an account with this email address'\n              : ''}\n          </p>\n\n          <input\n            name='firstName'\n            placeholder='First Name'\n            className={this.state.firstName}\n            value={this.state.firstnameInput}\n            onChange={this.handleFirstName}\n          />\n          <input\n            type='email'\n            name='email'\n            placeholder='Email'\n            className={this.state.email}\n            value={this.state.emailInput}\n            onChange={this.handleEmail}\n          />\n          <input\n            type='password'\n            name='password'\n            placeholder='Password'\n            className={this.state.password}\n            value={this.state.passwordInput}\n            onChange={this.handlePassword}\n          />\n          <button className={this.state.createBtn} onClick={this.handleSignUp}>\n            Create Account\n          </button>\n          <button className={this.state.loginBtn} onClick={this.handleLogin}>\n            Log in\n          </button>\n          <h5>\n            Continue as{' '}\n            <button className='btnlogin' onClick={this.handleGuest}>\n              Guest\n            </button>\n          </h5>\n        </form>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport TodoItem from './TodoItem';\nimport './ToDoApp.css';\nimport axios from 'axios';\n\nclass ToDoApp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    global.clickCount = 0;\n    global.inputArray = [];\n    global.backendData = '';\n    global.updateCount = 0;\n    global.checker = 1;\n\n    this.state = {\n      textboxStatus: 'noTextBox',\n      userInput: '',\n      todos: global.inputArray,\n      dateInput: '',\n      timeInput: '',\n      alert: '',\n      updateCount: 0,\n      data: 0\n    };\n  }\n\n  handleAdd = event => {\n    event.preventDefault();\n    this.setState({\n      textboxStatus: 'formStyle',\n      userInput: '',\n      dateInput: '',\n      timeInput: '',\n      alert: ''\n    });\n  };\n\n  componentDidMount() {\n    if (this.props.dataFromParent === true) {\n      var output = [];\n\n      axios\n        .get('https://still-everglades-82859.herokuapp.com/api/stuff')\n        .then(response => {\n          if (response.data.length > 0) {\n            response.data.sort(function(a, b) {\n              var dateA = new Date(a.date),\n                dateB = new Date(b.date);\n              return dateA - dateB; //sort by date ascending\n            });\n          }\n          for (let i = 0; i < response.data.length; i++) {\n            if (response.data[i].email === this.props.emailFromParent) {\n              output.push(response.data[i]);\n            }\n          }\n\n          output.length > 0\n            ? this.setState({ username: output[0].username })\n            : this.setState({ username: this.props.firstNameFromParent });\n          output.shift();\n          this.setState({\n            todos: output,\n            data: 0,\n            email: this.props.emailFromParent\n          });\n        });\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.state.data !== 0 || global.checker >= 1) {\n      global.checker--;\n      this.componentDidMount();\n    }\n  }\n\n  handleSubmit = event => {\n    if (this.state.userInput !== '') {\n      global.inputArray[global.clickCount] = {\n        id: '',\n        text: this.state.userInput,\n        date: this.state.dateInput,\n        time: this.state.timeInput,\n        email: this.props.emailFromParent,\n        username: this.state.username\n      };\n      console.log(this.state.username);\n      axios\n        .post(\n          'https://still-everglades-82859.herokuapp.com/api/stuff',\n          global.inputArray[global.clickCount]\n        )\n\n        .then(res => {\n          this.componentDidMount();\n        });\n\n      event.preventDefault();\n      this.setState({ textboxStatus: 'noTextBox' });\n      global.clickCount++;\n    } else {\n      event.preventDefault();\n      this.setState({\n        textboxStatus: 'formStyle',\n        userInput: '',\n        dateInput: ''\n      });\n    }\n  };\n\n  handleCancel = event => {\n    event.preventDefault();\n    this.setState({\n      textboxStatus: 'noTextBox',\n      userInput: '',\n      dateInput: '',\n      timeInput: ''\n    });\n  };\n\n  handleDate = event => {\n    this.setState({ dateInput: event.target.value });\n  };\n\n  handleTime = event => {\n    this.setState({ timeInput: event.target.value });\n  };\n\n  handleChange = event => {\n    this.setState({ userInput: event.target.value });\n  };\n\n  callbackFunction = childData => {\n    this.setState({ data: childData });\n    console.log(this.state.data);\n  };\n\n  render() {\n    const todoItems = this.state.todos.map(item => (\n      <TodoItem item={item} parentCallback={this.callbackFunction} />\n    ));\n\n    return (\n      <div className={this.props.dataFromParent === true ? 'App' : 'noDisplay'}>\n        <div className='todo-list'>\n          <h6 className='motivation'>\n            Tick says the Clock {this.state.username} ...Do what you have to do\n          </h6>\n\n          <form className={this.state.textboxStatus}>\n            <input\n              type='text'\n              name='userInput'\n              placeholder='To do Item'\n              value={this.state.userInput}\n              onChange={this.handleChange}\n            />\n            <br />\n            <input\n              type='date'\n              name='date'\n              placeholder='Due Date'\n              value={this.state.dateInput}\n              onChange={this.handleDate}\n            />\n            <br />\n            <input\n              type='time'\n              name='time'\n              placeholder='Time'\n              value={this.state.timeInput}\n              onChange={this.handleTime}\n            />\n            <br />\n            <button className='formButton' onClick={this.handleSubmit}>\n              {' '}\n              OK{' '}\n            </button>\n            <button className='formButton' onClick={this.handleCancel}>\n              CANCEL\n            </button>\n          </form>\n\n          <button className='btn' onClick={this.handleAdd}>\n            Add a New Item\n          </button>\n          {todoItems}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ToDoApp;\n","import React from 'react';\nimport './ToDoApp.css';\nimport edit from './edit_icon.png';\nimport delete_icon from './delete_icon.png';\nimport axios from 'axios';\n\nclass TodoItem extends React.Component {\n  constructor(props) {\n    super(props);\n    global.updateCount = 0;\n    this.state = {\n      checkBoxStatus: false,\n      styleText: 'unchecked',\n      reminder: null,\n      alert: false,\n      editBoxStatus: 'noTextBox',\n      userInput: '',\n      dateInput: '',\n      timeInput: '',\n      updateCount: global.updateCount\n    };\n\n    this.handleBoxChange = this.handleBoxChange.bind(this);\n    this.reminderLogic = this.reminderLogic.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleDate = this.handleDate.bind(this);\n    this.handleTime = this.handleTime.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.reminder = this.reminder.bind(this);\n  }\n\n  reminderLogic() {\n    var curTime = new Date();\n    var year = curTime.getFullYear();\n    var month = curTime.getMonth();\n    var day = curTime.getDate();\n\n    var end = new Date(this.props.item.date);\n    var year2 = end.getFullYear();\n    var month2 = end.getMonth();\n    var day2 = end.getDate();\n\n    var day3;\n    var future = day2 - day;\n    var past = day - day2;\n\n    var futureMonth = month2 - month;\n    var pastMonth = month - month2;\n    var futureYear = year2 - year;\n    var pastYear = year - year2;\n    if (futureYear === 1) {\n      day3 = false;\n    }\n    if (futureYear === -1) {\n      day3 = true;\n    }\n    if (futureYear > 1) {\n      day3 = false;\n    }\n    if (futureYear < 1) {\n      day3 = true;\n    }\n    if (futureMonth > 0 && futureYear === 0) {\n      day3 = false;\n    }\n    if (futureMonth < 0 && futureYear === 0) {\n      day3 = true;\n    }\n    if (future > 0 && futureMonth === 0 && futureYear === 0) {\n      day3 = false;\n    }\n    if (future < 0 && futureMonth === 0 && futureYear === 0) {\n      day3 = true;\n    }\n    if (future === 0 && futureMonth === 0 && futureYear === 0) {\n      day3 = true;\n    }\n\n    return day3;\n  }\n\n  reminder() {\n    var curTime = new Date();\n    var year = curTime.getFullYear();\n    var month = curTime.getMonth();\n    var day = curTime.getDate();\n\n    var end = new Date(this.props.item.date);\n    var year2 = end.getFullYear();\n    var month2 = end.getMonth();\n    var day2 = end.getDate();\n\n    var day3;\n    var future = day2 - day;\n    var past = day - day2;\n\n    var futureMonth = month2 - month;\n    var pastMonth = month - month2;\n    var futureYear = year2 - year;\n    var pastYear = year - year2;\n    if (futureYear === 1) {\n      day3 = 'Due next year';\n    }\n    if (futureYear === -1) {\n      day3 = 'Due last year';\n    }\n    if (futureYear > 1) {\n      day3 = 'due in ' + futureYear + ' year(s) time';\n    }\n    if (futureYear < 1) {\n      day3 = 'due ' + pastYear + ' year(s) ago';\n    }\n    if (futureMonth > 0 && futureYear === 0) {\n      day3 = 'Due in ' + futureMonth + ' month(s) time';\n    }\n    if (futureMonth < 0 && futureYear === 0) {\n      day3 = 'Due ' + pastMonth + ' month(s) ago';\n    }\n    if (future > 0 && futureMonth === 0 && futureYear === 0) {\n      day3 = 'Due in ' + future + ' day(s)';\n    }\n    if (future < 0 && futureMonth === 0 && futureYear === 0) {\n      day3 = 'Due ' + past + ' day(s) ago';\n    }\n    if (future === 0 && futureMonth === 0 && futureYear === 0) {\n      day3 = 'Due today';\n    }\n\n    return day3;\n  }\n\n  handleDate(event) {\n    this.setState({ dateInput: event.target.value });\n  }\n\n  handleTime(event) {\n    this.setState({ timeInput: event.target.value });\n  }\n\n  handleChange(event) {\n    this.setState({ userInput: event.target.value });\n  }\n\n  handleBoxChange(event) {\n    this.setState({\n      checkBoxStatus: event.target.checked\n    });\n  }\n\n  handleEdit(event) {\n    event.preventDefault();\n\n    this.setState({\n      editBoxStatus: 'formStyle',\n      userInput: this.props.item.text,\n      dateInput: this.props.item.date,\n      timeInput: this.props.item.time\n    });\n  }\n\n  handleUpdate(event) {\n    event.preventDefault();\n\n    const upDatedList = {\n      text: this.state.userInput,\n      date: this.state.dateInput,\n      time: this.state.timeInput\n    };\n\n    axios\n      .put(\n        'https://still-everglades-82859.herokuapp.com/api/stuff/' +\n          this.props.item._id,\n        upDatedList\n      )\n      .then(res => {\n        global.updateCount++;\n        this.setState({ updateCount: global.updateCount });\n        this.sendData();\n      });\n\n    this.setState({\n      editBoxStatus: 'noTextBox'\n    });\n  }\n\n  handleCancel(event) {\n    event.preventDefault();\n    this.setState({ editBoxStatus: 'noTextBox' });\n  }\n\n  sendData = () => {\n    this.props.parentCallback(this.state.updateCount);\n  };\n\n  handleDelete(event) {\n    event.preventDefault();\n    axios\n      .delete(\n        'https://still-everglades-82859.herokuapp.com/api/stuff/' +\n          this.props.item._id\n      )\n      .then(res => {\n        global.updateCount++;\n        this.setState({ updateCount: global.updateCount });\n        this.sendData();\n      });\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <div className='todo-item'>\n          <input\n            type='checkbox'\n            name='checkbox'\n            checked={this.state.checkBoxStatus}\n            onChange={this.handleBoxChange}\n            className='myCheckBox'\n          />\n          <p className={this.state.checkBoxStatus ? 'checked' : 'unchecked'}>\n            {this.props.item.text}\n          </p>\n          <p className='date'>{this.props.item.date}</p>\n\n          <img\n            src={edit}\n            className='icon1'\n            alt='An edit button'\n            onClick={this.handleEdit}\n          />\n          <img\n            src={delete_icon}\n            className='icon2'\n            alt='A delete button'\n            onClick={this.handleDelete}\n          />\n        </div>\n        <p\n          className={\n            this.reminderLogic() === true && this.state.checkBoxStatus == false\n              ? 'reminderAlert'\n              : 'reminder'\n          }>\n          {this.reminder()}\n        </p>\n\n        <form className={this.state.editBoxStatus}>\n          <input\n            type='text'\n            name='userInput'\n            value={this.state.userInput}\n            onChange={this.handleChange}\n          />\n          <br />\n          <input\n            type='date'\n            name='date'\n            value={this.state.dateInput}\n            onChange={this.handleDate}\n          />\n          <br />\n          <input\n            type='time'\n            name='time'\n            value={this.state.timeInput}\n            onChange={this.handleTime}\n          />\n          <br />\n          <button className='formButton' onClick={this.handleUpdate}>\n            Update\n          </button>\n          <button className='formButton' onClick={this.handleCancel}>\n            CANCEL\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default TodoItem;\n","module.exports = __webpack_public_path__ + \"static/media/edit_icon.e764b070.png\";","module.exports = __webpack_public_path__ + \"static/media/delete_icon.1cd05d53.png\";","import React from 'react';\nimport Login from './Login.js';\nimport ToDoApp from './ToDoApp.js';\nimport './ToDoApp.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: '',\n      email: '',\n      firstName: ''\n    };\n  }\n\n  callbackFunction = childData => {\n    this.setState({ data: childData });\n  };\n\n  callbackFunction2 = childEmail => {\n    this.setState({ email: childEmail });\n  };\n  callbackFunction3 = childFirstName => {\n    this.setState({ firstName: childFirstName });\n  };\n\n  render() {\n    return (\n      <div>\n        <Login\n          parentCallback={this.callbackFunction}\n          parentCallback2={this.callbackFunction2}\n          parentCallback3={this.callbackFunction3}\n          parentCallback4={this.callbackFunction4}\n        />\n        <ToDoApp\n          dataFromParent={this.state.data}\n          emailFromParent={this.state.email}\n          firstNameFromParent={this.state.firstName}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n\n\t<BrowserRouter>\n\t<App />\n</BrowserRouter>, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}